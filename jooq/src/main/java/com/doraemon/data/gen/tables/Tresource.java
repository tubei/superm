/*
 * This file is generated by jOOQ.
 */
package com.doraemon.data.gen.tables;


import com.doraemon.data.enums.ResourceType;
import com.doraemon.data.gen.Indexes;
import com.doraemon.data.gen.Keys;
import com.doraemon.data.gen.Superm;
import com.doraemon.data.gen.tables.records.ResourceRecord;

import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tresource extends TableImpl<ResourceRecord> {

    private static final long serialVersionUID = -581097223;

    /**
     * The reference instance of <code>superm.resource</code>
     */
    public static final Tresource RESOURCE = new Tresource();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ResourceRecord> getRecordType() {
        return ResourceRecord.class;
    }

    /**
     * The column <code>superm.resource.id</code>.
     */
    public final TableField<ResourceRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>superm.resource.name</code>. 资源名称
     */
    public final TableField<ResourceRecord, String> NAME = createField("name", org.jooq.impl.SQLDataType.VARCHAR(64).nullable(false), this, "资源名称");

    /**
     * The column <code>superm.resource.desc</code>. 资源描述
     */
    public final TableField<ResourceRecord, String> DESC = createField("desc", org.jooq.impl.SQLDataType.VARCHAR(256), this, "资源描述");

    /**
     * The column <code>superm.resource.path</code>. 资源路径
     */
    public final TableField<ResourceRecord, String> PATH = createField("path", org.jooq.impl.SQLDataType.VARCHAR(256), this, "资源路径");

    /**
     * The column <code>superm.resource.type</code>. 资源类型，菜单、资源等
     */
    public final TableField<ResourceRecord, ResourceType> TYPE = createField("type", org.jooq.impl.SQLDataType.TINYINT.nullable(false), this, "资源类型，菜单、资源等", com.doraemon.data.convert.DBEnumConverter.build(ResourceType.class));

    /**
     * The column <code>superm.resource.parent_id</code>. 父id
     */
    public final TableField<ResourceRecord, Integer> PARENT_ID = createField("parent_id", org.jooq.impl.SQLDataType.INTEGER.defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.INTEGER)), this, "父id");

    /**
     * Create a <code>superm.resource</code> table reference
     */
    public Tresource() {
        this(DSL.name("resource"), null);
    }

    /**
     * Create an aliased <code>superm.resource</code> table reference
     */
    public Tresource(String alias) {
        this(DSL.name(alias), RESOURCE);
    }

    /**
     * Create an aliased <code>superm.resource</code> table reference
     */
    public Tresource(Name alias) {
        this(alias, RESOURCE);
    }

    private Tresource(Name alias, Table<ResourceRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tresource(Name alias, Table<ResourceRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Tresource(Table<O> child, ForeignKey<O, ResourceRecord> key) {
        super(child, key, RESOURCE);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Superm.SUPERM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.RESOURCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<ResourceRecord, Integer> getIdentity() {
        return Keys.IDENTITY_RESOURCE;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ResourceRecord> getPrimaryKey() {
        return Keys.KEY_RESOURCE_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ResourceRecord>> getKeys() {
        return Arrays.<UniqueKey<ResourceRecord>>asList(Keys.KEY_RESOURCE_PRIMARY);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tresource as(String alias) {
        return new Tresource(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tresource as(Name alias) {
        return new Tresource(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tresource rename(String name) {
        return new Tresource(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tresource rename(Name name) {
        return new Tresource(name, null);
    }
}
