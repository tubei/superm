/*
 * This file is generated by jOOQ.
 */
package com.doraemon.data.gen.tables;


import com.doraemon.data.enums.UserState;
import com.doraemon.data.gen.Indexes;
import com.doraemon.data.gen.Keys;
import com.doraemon.data.gen.Superm;
import com.doraemon.data.gen.tables.records.UserRecord;

import java.time.LocalDateTime;
import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Identity;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Record;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.11.11"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Tuser extends TableImpl<UserRecord> {

    private static final long serialVersionUID = -224409312;

    /**
     * The reference instance of <code>superm.user</code>
     */
    public static final Tuser USER = new Tuser();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<UserRecord> getRecordType() {
        return UserRecord.class;
    }

    /**
     * The column <code>superm.user.id</code>.
     */
    public final TableField<UserRecord, Integer> ID = createField("id", org.jooq.impl.SQLDataType.INTEGER.nullable(false).identity(true), this, "");

    /**
     * The column <code>superm.user.username</code>. 帐号名称，唯一，手机号或邮箱
     */
    public final TableField<UserRecord, String> USERNAME = createField("username", org.jooq.impl.SQLDataType.VARCHAR(32).nullable(false), this, "帐号名称，唯一，手机号或邮箱");

    /**
     * The column <code>superm.user.password</code>. 加密后的密码
     */
    public final TableField<UserRecord, String> PASSWORD = createField("password", org.jooq.impl.SQLDataType.VARCHAR(128).defaultValue(org.jooq.impl.DSL.inline("", org.jooq.impl.SQLDataType.VARCHAR)), this, "加密后的密码");

    /**
     * The column <code>superm.user.state</code>. 帐号状态 0:正常 1禁用
     */
    public final TableField<UserRecord, UserState> STATE = createField("state", org.jooq.impl.SQLDataType.TINYINT.nullable(false).defaultValue(org.jooq.impl.DSL.inline("0", org.jooq.impl.SQLDataType.TINYINT)), this, "帐号状态 0:正常 1禁用", com.doraemon.data.convert.DBEnumConverter.build(UserState.class));

    /**
     * The column <code>superm.user.create_time</code>. 创建时间
     */
    public final TableField<UserRecord, LocalDateTime> CREATE_TIME = createField("create_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "创建时间");

    /**
     * The column <code>superm.user.update_time</code>. 更新时间
     */
    public final TableField<UserRecord, LocalDateTime> UPDATE_TIME = createField("update_time", org.jooq.impl.SQLDataType.LOCALDATETIME.nullable(false).defaultValue(org.jooq.impl.DSL.field("CURRENT_TIMESTAMP", org.jooq.impl.SQLDataType.LOCALDATETIME)), this, "更新时间");

    /**
     * Create a <code>superm.user</code> table reference
     */
    public Tuser() {
        this(DSL.name("user"), null);
    }

    /**
     * Create an aliased <code>superm.user</code> table reference
     */
    public Tuser(String alias) {
        this(DSL.name(alias), USER);
    }

    /**
     * Create an aliased <code>superm.user</code> table reference
     */
    public Tuser(Name alias) {
        this(alias, USER);
    }

    private Tuser(Name alias, Table<UserRecord> aliased) {
        this(alias, aliased, null);
    }

    private Tuser(Name alias, Table<UserRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, DSL.comment(""));
    }

    public <O extends Record> Tuser(Table<O> child, ForeignKey<O, UserRecord> key) {
        super(child, key, USER);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Superm.SUPERM;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.USER_PRIMARY, Indexes.USER_UQX_USERNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Identity<UserRecord, Integer> getIdentity() {
        return Keys.IDENTITY_USER;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<UserRecord> getPrimaryKey() {
        return Keys.KEY_USER_PRIMARY;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<UserRecord>> getKeys() {
        return Arrays.<UniqueKey<UserRecord>>asList(Keys.KEY_USER_PRIMARY, Keys.KEY_USER_UQX_USERNAME);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tuser as(String alias) {
        return new Tuser(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Tuser as(Name alias) {
        return new Tuser(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Tuser rename(String name) {
        return new Tuser(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Tuser rename(Name name) {
        return new Tuser(name, null);
    }
}
